#| label: fig-no2
#| fig-cap: "Measurements of NO2 per day since start of collection."
plot(x = 1:1094, y = ap$no2,
type = 'l', xlab = "Days Since Collection Start",
ylab = "NO2 (ppb)")
#| label: load_data
ap <- read.csv(file = "5240-workshop03-data.csv", header = TRUE)
str(ap)
#| label: fig-no2
#| fig-cap: "Measurements of NO2 per day since start of collection."
plot(x = 1:1094, y = ap$no2,
type = 'l', xlab = "Days Since Collection Start",
ylab = "NO2 (ppb)")
#| label: fig-no2
#| fig-cap: "Measurements of NO2 per day since start of collection."
plot(x = 1:1094, y = ap$no2,
type = 's', xlab = "Days Since Collection Start",
ylab = "NO2 (ppb)")
#| label: fig-no2
#| fig-cap: "Measurements of NO2 per day since start of collection."
plot(x = 1:1094, y = ap$no2,
type = 'p', xlab = "Days Since Collection Start",
ylab = "NO2 (ppb)")
#| label: fig-no2
#| fig-cap: "Measurements of NO2 per day since start of collection."
plot(x = 1:1094, y = ap$no2,
type = 'l', xlab = "Days Since Collection Start",
ylab = "NO2 (ppb)")
#| label: do_logical
answers <- ap$no2 > 60
str(answers)
answers[310:330] # here we are selecting the 310 through 330's element of the vector
#| label: logical_example
our_numbers <- 1:20
our_logic <- ( our_numbers > 11 )
our_numbers
our_logic
our_numbers[ our_logic ]
d <-c(1,2,3,4,5,6)
our_logic <- d%%3
d[our_logic]
d <-c(1,2,3,4,5,6)
our_logic <- d%%3
our_logic
d <-c(1,2,3,4,5,6)
our_logic <- d%%3
newl <- our_logic[our_logic == 0]
d[newl]
d <-c(1,2,3,4,5,6)
our_logic <- d%%3
newl <- our_logic[our_logic == 0]
newl
d <- c(1,2,3,4,5,6)
d[d>3]
# Method 2
no2_lt_60_v2 <- subset(ap, no2 < 60, select = no2, drop = TRUE)
str(no2_lt_60_v2)
# Method 2
no2_lt_60_v2 <- subset(ap, no2 < 60, select = no2, drop = FALSE)
str(no2_lt_60_v2)
# Method 2
no2_lt_60_v2 <- subset(ap, no2 < 60, select = no2, drop = TRUE)
str(no2_lt_60_v2)
# Method 2
no2_lt_60_v2 <- subset(ap, no2 < 60, select = no2)
str(no2_lt_60_v2)
# Method 2
no2_lt_60_v2 <- subset(ap, no2 < 60, select = no2)
str(no2_lt_60_v2)
# Method 2
no2_lt_60_v2 <- subset(ap, no2 < 60, select = no2, drop = TRUE)
str(no2_lt_60_v2)
#| label: outlier_removal_demo
no_outliers_no2 <- ap[ no2_lt_60_logical, ]
# Method 2
no2_lt_60_v2 <- subset(ap, no2 < 60, select = no2, drop = TRUE)
str(no2_lt_60_v2)
# Method 1
no2_lt_60_logical <- ap$no2 < 60
no2_lt_60 <- ap$no2[no2_lt_60_logical]
str(no2_lt_60)
#| label: outlier_removal_demo
no_outliers_no2 <- ap[ no2_lt_60_logical, ]
str(no_outliers_no2)
no_outliers_no2_v2 <- subset(ap, no2 < 60)
str(no_outliers_no2_v2)
#| label: fig-plot-o3-no2
plot(x= ap$no2 , y=ap$o3)
plot(x = ap$no2, y = ap$o3,
xlab = "NO2 (ppm)",
ylab = "O3 (ppm)")
plot(o3 ~ no2, data = ap,
xlab = "NO2 (ppm)",
ylab = "O3 (ppm)")
#| label: fig-cor-o3-no2
cor(ap$no2, ap$o3)
#| label: lm-o3-no2
mdl <- lm(o3 ~ no2, data = ap)
summary(mdl)
#| label: fig-line-of-best-fit
plot(o3 ~ no2, data = ap,
xlab = "NO2 (ppm)",
ylab = "O3 (ppm)")
abline(mdl, col = "blue", lwd = 2)
#| label: o3-predictions
new_o3 <- predict(mdl, newdata = new_no2)
#| label: no2-data-frame
new_no2 <- data.frame(no2 = c(10, 20, 25, 30, 50, 70))
#| label: o3-predictions
new_o3 <- predict(mdl, newdata = new_no2)
#| label: risk-to-health
pred_o3_gt_35 <- new_o3 > 35
sum(pred_o3_gt_35)
data("mtcars")
dim(mtcars)
data("mtcars")
dim(mtcars)
names(mtcars)
names(mtcars)
#l label : scatter plot of weight vs mpg (miles per gallon)
#| label: scatter plot of weight vs mpg (miles per gallon)
colors()
#| label: scatter plot of weight vs mpg (miles per gallon)
plot(mtcars$wt ~ mtcars$mpg,
col = "azure4")
names(mtcars)
str(mtcars)
#| label: scatter plot of weight vs mpg (miles per gallon)
plot(mtcars$wt ~ mtcars$mpg,
col = "azure4",
xlab = "Miles per Gallon (mpg)",
ylab = "Weight of car")
#| label: scatter plot of weight vs mpg (miles per gallon)
plot(mtcars$wt ~ mtcars$mpg,
col = "azure4",
xlab = "Miles per gallon (mpg)",
ylab = "Weight of car")
#| label: scatter plot of weight vs mpg (miles per gallon)
plot(mtcars$wt ~ mtcars$mpg,
col = "aliceblue",
xlab = "Miles per gallon (mpg)",
ylab = "Weight of car")
#| label: scatter plot of weight vs mpg (miles per gallon)
plot(mtcars$wt ~ mtcars$mpg,
col = "moccasin",
xlab = "Miles per gallon (mpg)",
ylab = "Weight of car")
#| label: scatter plot of weight vs mpg (miles per gallon)
plot(mtcars$wt ~ mtcars$mpg,
col = "midnightblue",
xlab = "Miles per gallon (mpg)",
ylab = "Weight of car")
cor(mtcars$wt,mtcars$mpg)
model_fit <-lm(mtcars$wt ~ mtcars$mpg , data = mtcars)
model_fit <-lm(mtcars$wt ~ mtcars$mpg , data = mtcars)
summary(model_fit)
#| label: scatter plot of weight vs mpg (miles per gallon)
plot(mtcars$wt ~ mtcars$mpg,
col = "midnightblue",
xlab = "Miles per gallon (mpg)",
ylab = "Weight of car (1000 lbs)",
main = "Weight Vs Average Fuel Economy (mpg)")
#| label: Model for Weight of cars (weight) Vs average fuel economy (mpg)
plot(mtcars$wt ~ mtcars$mpg ,
xlab = "miles per gallon (mpg)",
ylab = "weight (1000 lbs)",
col = "midnightblue"
)
abline(model_fit, col = "orange")
#| label: Model for Weight of cars (weight) Vs average fuel economy (mpg)
plot(mtcars$wt ~ mtcars$mpg ,
xlab = "miles per gallon (mpg)",
ylab = "weight (1000 lbs)",
col = "midnightblue"
)
abline(model_fit, col = "orange" , lwb =2)
#| label: Model for Weight of cars (weight) Vs average fuel economy (mpg)
plot(mtcars$wt ~ mtcars$mpg ,
xlab = "miles per gallon (mpg)",
ylab = "weight (1000 lbs)",
col = "midnightblue"
)
abline(model_fit, col = "orange" ,lwd=3)
model_fit <-lm(mtcars$wt ~ mtcars$mpg , data = mtcars)
summary(model_fit)
$$
model_fit <-lm(mtcars$wt ~ mtcars$mpg , data = mtcars)
summary(model_fit)
model_fit <-lm(mtcars$wt ~ mtcars$mpg , data = mtcars)
summary(model_fit)
model_fit <-lm(mtcars$wt ~ mtcars$mpg , data = mtcars)
summary(model_fit)
#| label: Model for Weight of cars (weight) Vs average fuel economy (mpg)
plot(mtcars$wt ~ mtcars$mpg ,
xlab = "miles per gallon (mpg)",
ylab = "weight (1000 lbs)",
col = "midnightblue"
)
abline(model_fit, col = "orange" ,lwd=3)
summary(model_fit)
model_fit <-lm(mtcars$wt ~ mtcars$mpg , data = mtcars)
