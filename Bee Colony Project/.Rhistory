# Load datasets
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')
stressor <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/stressor.csv')
# Preprocessing
colony <- colony %>% filter(state != "United States")
stressor <- stressor %>% filter(state != "United States")
colony <- colony %>% mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
stressor <- stressor %>% mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
# Stratified sampling (10% of data from each state)
set.seed(123)
colony_sample <- colony %>% group_by(state) %>% sample_frac(0.1)
stressor_sample <- stressor %>% group_by(state) %>% sample_frac(0.1)
# Merge datasets
merged_data <- colony_sample %>% inner_join(stressor_sample, by = c("year", "months", "state"))
# Statistical Summary Table
stat_summary <- data.frame(
Variable = c("Colonies Lost", "Colony Loss Percentage", "Stress Percentage"),
Mean = c(mean(colony$colony_lost), mean(colony$colony_lost_pct), mean(stressor$stress_pct, na.rm = TRUE)),
Median = c(median(colony$colony_lost), median(colony$colony_lost_pct), median(stressor$stress_pct, na.rm = TRUE)),
Min = c(min(colony$colony_lost), min(colony$colony_lost_pct), min(stressor$stress_pct, na.rm = TRUE)),
Max = c(max(colony$colony_lost), max(colony$colony_lost_pct), max(stressor$stress_pct, na.rm = TRUE)),
StdDev = c(sd(colony$colony_lost), sd(colony$colony_lost_pct), sd(stressor$stress_pct, na.rm = TRUE))
)
# Print statistical summary as a table
kable(stat_summary, caption = "Table 1: Summary Statistics for Key Variables")
loss_trend <- colony_sample %>%
group_by(year) %>%
summarise(total_colony_lost = sum(colony_lost))
ggplot(loss_trend, aes(x = year, y = total_colony_lost)) +
geom_line(color = "blue", linewidth = 1) +
labs(
title = "Figure 1: Trend of Bee Colony Losses Over the Years",
x = "Year",
y = "Total Colonies Lost"
)
stressor_summary <- stressor_sample %>%
group_by(stressor) %>%
summarise(avg_stress_pct = mean(stress_pct, na.rm = TRUE)) %>%
arrange(desc(avg_stress_pct))
ggplot(stressor_summary, aes(x = reorder(stressor, -avg_stress_pct), y = avg_stress_pct)) +
geom_bar(stat = "identity", fill = "orange") +
coord_flip() +
labs(title = "Stressors Affecting Bee Colonies", x = "Stressors", y = "Average Stress Percentage")
state_losses <- colony %>%
group_by(state) %>%
summarise(total_lost = sum(colony_lost)) %>%
arrange(desc(total_lost))
top_states <- state_losses %>% slice_head(n = 5)
bottom_states <- state_losses %>% slice_tail(n = 5)
top_bottom_states <- bind_rows(
top_states %>% mutate(group = "Highest Losses"),
bottom_states %>% mutate(group = "Lowest Losses")
)
ggplot(top_bottom_states, aes(x = reorder(state, -total_lost), y = total_lost, fill = group)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ group, scales = "free") +
labs(title = "Colony Losses: Top 5 and Bottom 5 States", x = "State", y = "Total Colonies Lost") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
merged_data <- colony_sample %>%
inner_join(stressor_sample, by = c("year", "months", "state"))
ggplot(merged_data, aes(x = stressor, y = colony_lost_pct)) +
geom_boxplot(fill = "lightgreen") +
coord_flip() +
labs(title = "Colony Loss Percentage by Stressor", x = "Stressor", y = "Colony Loss Percentage")
correlation <- cor(merged_data$colony_lost, merged_data$stress_pct, use = "complete.obs")
print(paste("Correlation between colony loss and stress percentage:", round(correlation, 2)))
ggplot(merged_data, aes(x = stress_pct, y = colony_lost)) +
geom_point(alpha = 0.6, color = "purple") +
geom_smooth(method = "lm", color = "red") +
labs(title = "Relationship Between Colony Loss and Stress Percentage", x = "Stress Percentage", y = "Colonies Lost")
# Hypothesis Test: T-test between high and low stress percentages
high_stress <- merged_data %>% filter(stress_pct > median(stress_pct))
low_stress <- merged_data %>% filter(stress_pct <= median(stress_pct))
t_test_result <- t.test(high_stress$colony_lost_pct, low_stress$colony_lost_pct)
print(t_test_result)
# Regression Model: Colony loss prediction
model <- lm(colony_lost ~ stress_pct + year + factor(state), data = merged_data)
summary(model)
# Pairs plot for numeric relationships
ggpairs(merged_data, columns = c("colony_lost", "colony_added", "stress_pct"))
# Hypothesis testing :
# Proportion test for number of colonies lost between high stress and low stress groups.
# Ho : No difference in number of colonies loss between high and low stress states.
# Ha : Significant difference in number of colonies loss between high and low stress states.
high_stress <- merged_data %>% filter(stress_pct > median(stress_pct))
low_stress <- merged_data %>% filter(stress_pct <= median(stress_pct))
# Define threshold for high colony loss
loss_threshold <- median(merged_data$colony_lost, na.rm = TRUE)
# Calculate counts of high-loss colonies in each group
high_stress_high_loss <- nrow(high_stress %>% filter(colony_lost > loss_threshold))
low_stress_high_loss <- nrow(low_stress %>% filter(colony_lost > loss_threshold))
# Total number of colonies in each group
high_stress_total <- nrow(high_stress)
low_stress_total <- nrow(low_stress)
# Perform two-proportion z-test
prop_test_results <- prop.test(
x = c(high_stress_high_loss, low_stress_high_loss),  # Counts of high-loss colonies
n = c(high_stress_total, low_stress_total),         # Total colonies in each group
alternative = "two.sided"                          # Test for any difference
)
# Print the test results
print(prop_test_results)
# Hypothesis Test: T-test between high and low stress percentages
high_stress <- merged_data %>% filter(stress_pct > median(stress_pct))
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(GGally)
library(tidyr)
library(knitr)
# Load datasets
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')
stressor <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/stressor.csv')
# Preprocessing
colony <- colony %>% filter(state != "United States")
stressor <- stressor %>% filter(state != "United States")
colony <- colony %>% mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
stressor <- stressor %>% mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
# Stratified sampling (10% of data from each state)
set.seed(123)
colony_sample <- colony %>% group_by(state) %>% sample_frac(0.1)
stressor_sample <- stressor %>% group_by(state) %>% sample_frac(0.1)
# Merge datasets
merged_data <- colony_sample %>% inner_join(stressor_sample, by = c("year", "months", "state"))
# Statistical Summary Table
stat_summary <- data.frame(
Variable = c("Colonies Lost", "Colony Loss Percentage", "Stress Percentage"),
Mean = c(mean(colony$colony_lost), mean(colony$colony_lost_pct), mean(stressor$stress_pct, na.rm = TRUE)),
Median = c(median(colony$colony_lost), median(colony$colony_lost_pct), median(stressor$stress_pct, na.rm = TRUE)),
Min = c(min(colony$colony_lost), min(colony$colony_lost_pct), min(stressor$stress_pct, na.rm = TRUE)),
Max = c(max(colony$colony_lost), max(colony$colony_lost_pct), max(stressor$stress_pct, na.rm = TRUE)),
StdDev = c(sd(colony$colony_lost), sd(colony$colony_lost_pct), sd(stressor$stress_pct, na.rm = TRUE))
)
# Print statistical summary as a table
kable(stat_summary, caption = "Table 1: Summary Statistics for Key Variables")
loss_trend <- colony_sample %>%
group_by(year) %>%
summarise(total_colony_lost = sum(colony_lost))
ggplot(loss_trend, aes(x = year, y = total_colony_lost)) +
geom_line(color = "blue", linewidth = 1) +
labs(
title = "Figure 1: Trend of Bee Colony Losses Over the Years",
x = "Year",
y = "Total Colonies Lost"
)
stressor_summary <- stressor_sample %>%
group_by(stressor) %>%
summarise(avg_stress_pct = mean(stress_pct, na.rm = TRUE)) %>%
arrange(desc(avg_stress_pct))
ggplot(stressor_summary, aes(x = reorder(stressor, -avg_stress_pct), y = avg_stress_pct)) +
geom_bar(stat = "identity", fill = "orange") +
coord_flip() +
labs(title = "Stressors Affecting Bee Colonies", x = "Stressors", y = "Average Stress Percentage")
state_losses <- colony %>%
group_by(state) %>%
summarise(total_lost = sum(colony_lost)) %>%
arrange(desc(total_lost))
top_states <- state_losses %>% slice_head(n = 5)
bottom_states <- state_losses %>% slice_tail(n = 5)
top_bottom_states <- bind_rows(
top_states %>% mutate(group = "Highest Losses"),
bottom_states %>% mutate(group = "Lowest Losses")
)
ggplot(top_bottom_states, aes(x = reorder(state, -total_lost), y = total_lost, fill = group)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ group, scales = "free") +
labs(title = "Colony Losses: Top 5 and Bottom 5 States", x = "State", y = "Total Colonies Lost") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
merged_data <- colony_sample %>%
inner_join(stressor_sample, by = c("year", "months", "state"))
ggplot(merged_data, aes(x = stressor, y = colony_lost_pct)) +
geom_boxplot(fill = "lightgreen") +
coord_flip() +
labs(title = "Colony Loss Percentage by Stressor", x = "Stressor", y = "Colony Loss Percentage")
correlation <- cor(merged_data$colony_lost, merged_data$stress_pct, use = "complete.obs")
print(paste("Correlation between colony loss and stress percentage:", round(correlation, 2)))
ggplot(merged_data, aes(x = stress_pct, y = colony_lost)) +
geom_point(alpha = 0.6, color = "purple") +
geom_smooth(method = "lm", color = "red") +
labs(title = "Relationship Between Colony Loss and Stress Percentage", x = "Stress Percentage", y = "Colonies Lost")
# Hypothesis Test: T-test between high and low stress percentages
high_stress <- merged_data %>% filter(stress_pct > median(stress_pct))
low_stress <- merged_data %>% filter(stress_pct <= median(stress_pct))
t_test_result <- t.test(high_stress$colony_lost_pct, low_stress$colony_lost_pct)
print(t_test_result)
# Regression Model: Colony loss prediction
model <- lm(colony_lost ~ stress_pct + year + factor(state), data = merged_data)
summary(model)
# Pairs plot for numeric relationships
ggpairs(merged_data, columns = c("colony_lost", "colony_added", "stress_pct"))
# Hypothesis testing :
# Proportion test for number of colonies lost between high stress and low stress groups.
# Ho : No difference in number of colonies loss between high and low stress states.
# Ha : Significant difference in number of colonies loss between high and low stress states.
high_stress <- merged_data %>% filter(stress_pct > median(stress_pct))
low_stress <- merged_data %>% filter(stress_pct <= median(stress_pct))
# Define threshold for high colony loss
loss_threshold <- median(merged_data$colony_lost, na.rm = TRUE)
# Calculate counts of high-loss colonies in each group
high_stress_high_loss <- nrow(high_stress %>% filter(colony_lost > loss_threshold))
low_stress_high_loss <- nrow(low_stress %>% filter(colony_lost > loss_threshold))
# Total number of colonies in each group
high_stress_total <- nrow(high_stress)
low_stress_total <- nrow(low_stress)
# Perform two-proportion z-test
prop_test_results <- prop.test(
x = c(high_stress_high_loss, low_stress_high_loss),  # Counts of high-loss colonies
n = c(high_stress_total, low_stress_total),         # Total colonies in each group
alternative = "two.sided"                          # Test for any difference
)
# Print the test results
print(prop_test_results)
# Hypothesis Test 2 : Checking the realtionship between different stressors and colonies lost
# Assumptions
# Perform Shapiro-Wilk test for normality within each stress level
by(merged_data$colony_lost, merged_data$stressor, function(x) shapiro.test(x))
# Hypothesis Test 2 : Checking the realtionship between different stressors and colonies lost
# Assumptions
# Perform Shapiro-Wilk test for normality within each stress level
by(merged_data$colony_lost, merged_data$stressor, function(x) shapiro.test(x))
# Run Kruskal-Wallis Test to compare colony loss across different stressors
kruskal_result <- kruskal.test(colony_lost ~ stressor, data = merged_data)
# Display the result
print(kruskal_result)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(GGally)
library(tidyr)
library(knitr)
# Load datasets
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')
stressor <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/stressor.csv')
# Preprocessing
colony <- colony %>% filter(state != "United States")
stressor <- stressor %>% filter(state != "United States")
colony <- colony %>% mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
stressor <- stressor %>% mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
# Stratified sampling (10% of data from each state)
set.seed(123)
colony_sample <- colony %>% group_by(state) %>% sample_frac(0.1)
stressor_sample <- stressor %>% group_by(state) %>% sample_frac(0.1)
# Merge datasets
merged_data <- colony_sample %>% inner_join(stressor_sample, by = c("year", "months", "state"))
# Statistical Summary Table
stat_summary <- data.frame(
Variable = c("Colonies Lost", "Colony Loss Percentage", "Stress Percentage"),
Mean = c(mean(colony$colony_lost), mean(colony$colony_lost_pct), mean(stressor$stress_pct, na.rm = TRUE)),
Median = c(median(colony$colony_lost), median(colony$colony_lost_pct), median(stressor$stress_pct, na.rm = TRUE)),
Min = c(min(colony$colony_lost), min(colony$colony_lost_pct), min(stressor$stress_pct, na.rm = TRUE)),
Max = c(max(colony$colony_lost), max(colony$colony_lost_pct), max(stressor$stress_pct, na.rm = TRUE)),
StdDev = c(sd(colony$colony_lost), sd(colony$colony_lost_pct), sd(stressor$stress_pct, na.rm = TRUE))
)
# Print statistical summary as a table
kable(stat_summary, caption = "Table 1: Summary Statistics for Key Variables")
loss_trend <- colony_sample %>%
group_by(year) %>%
summarise(total_colony_lost = sum(colony_lost))
ggplot(loss_trend, aes(x = year, y = total_colony_lost)) +
geom_line(color = "blue", linewidth = 1) +
labs(
title = "Figure 1: Trend of Bee Colony Losses Over the Years",
x = "Year",
y = "Total Colonies Lost"
)
stressor_summary <- stressor_sample %>%
group_by(stressor) %>%
summarise(avg_stress_pct = mean(stress_pct, na.rm = TRUE)) %>%
arrange(desc(avg_stress_pct))
ggplot(stressor_summary, aes(x = reorder(stressor, -avg_stress_pct), y = avg_stress_pct)) +
geom_bar(stat = "identity", fill = "orange") +
coord_flip() +
labs(title = "Stressors Affecting Bee Colonies", x = "Stressors", y = "Average Stress Percentage")
state_losses <- colony %>%
group_by(state) %>%
summarise(total_lost = sum(colony_lost)) %>%
arrange(desc(total_lost))
top_states <- state_losses %>% slice_head(n = 5)
bottom_states <- state_losses %>% slice_tail(n = 5)
top_bottom_states <- bind_rows(
top_states %>% mutate(group = "Highest Losses"),
bottom_states %>% mutate(group = "Lowest Losses")
)
ggplot(top_bottom_states, aes(x = reorder(state, -total_lost), y = total_lost, fill = group)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ group, scales = "free") +
labs(title = "Colony Losses: Top 5 and Bottom 5 States", x = "State", y = "Total Colonies Lost") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
merged_data <- colony_sample %>%
inner_join(stressor_sample, by = c("year", "months", "state"))
ggplot(merged_data, aes(x = stressor, y = colony_lost_pct)) +
geom_boxplot(fill = "lightgreen") +
coord_flip() +
labs(title = "Colony Loss Percentage by Stressor", x = "Stressor", y = "Colony Loss Percentage")
correlation <- cor(merged_data$colony_lost, merged_data$stress_pct, use = "complete.obs")
print(paste("Correlation between colony loss and stress percentage:", round(correlation, 2)))
ggplot(merged_data, aes(x = stress_pct, y = colony_lost)) +
geom_point(alpha = 0.6, color = "purple") +
geom_smooth(method = "lm", color = "red") +
labs(title = "Relationship Between Colony Loss and Stress Percentage", x = "Stress Percentage", y = "Colonies Lost")
# Regression Model: Colony loss prediction
model <- lm(colony_lost ~ stress_pct + year + factor(state), data = merged_data)
summary(model)
# Pairs plot for numeric relationships
ggpairs(merged_data, columns = c("colony_lost", "colony_added", "stress_pct"))
# Hypothesis testing :
# Proportion test for number of colonies lost between high stress and low stress groups.
# Ho : No difference in number of colonies loss between high and low stress states.
# Ha : Significant difference in number of colonies loss between high and low stress states.
high_stress <- merged_data %>% filter(stress_pct > median(stress_pct))
low_stress <- merged_data %>% filter(stress_pct <= median(stress_pct))
# Define threshold for high colony loss
loss_threshold <- median(merged_data$colony_lost, na.rm = TRUE)
# Calculate counts of high-loss colonies in each group
high_stress_high_loss <- nrow(high_stress %>% filter(colony_lost > loss_threshold))
low_stress_high_loss <- nrow(low_stress %>% filter(colony_lost > loss_threshold))
# Total number of colonies in each group
high_stress_total <- nrow(high_stress)
low_stress_total <- nrow(low_stress)
# Perform two-proportion z-test
prop_test_results <- prop.test(
x = c(high_stress_high_loss, low_stress_high_loss),  # Counts of high-loss colonies
n = c(high_stress_total, low_stress_total),         # Total colonies in each group
alternative = "two.sided"                          # Test for any difference
)
# Print the test results
print(prop_test_results)
# Hypothesis Test 2 : Checking the realtionship between different stressors and colonies lost
# Assumptions
# Perform Shapiro-Wilk test for normality within each stress level
by(merged_data$colony_lost, merged_data$stressor, function(x) shapiro.test(x))
# Run Kruskal-Wallis Test to compare colony loss across different stressors
kruskal_result <- kruskal.test(colony_lost ~ stressor, data = merged_data)
# Display the result
print(kruskal_result)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(GGally)
library(tidyr)
library(knitr)
# Load datasets
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')
stressor <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/stressor.csv')
# Preprocessing
colony <- colony %>% filter(state != "United States")
stressor <- stressor %>% filter(state != "United States")
colony <- colony %>% mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
stressor <- stressor %>% mutate(across(where(is.numeric), ~ ifelse(is.na(.), median(., na.rm = TRUE), .)))
# Stratified sampling (10% of data from each state)
set.seed(123)
colony_sample <- colony %>% group_by(state) %>% sample_frac(0.1)
stressor_sample <- stressor %>% group_by(state) %>% sample_frac(0.1)
# Merge datasets
merged_data <- colony_sample %>% inner_join(stressor_sample, by = c("year", "months", "state"))
stat_summary <- data.frame(
Variable = c("Colonies Lost", "Colony Loss Percentage", "Stress Percentage"),
Mean = c(mean(colony$colony_lost), mean(colony$colony_lost_pct), mean(stressor$stress_pct, na.rm = TRUE)),
Median = c(median(colony$colony_lost), median(colony$colony_lost_pct), median(stressor$stress_pct, na.rm = TRUE)),
Min = c(min(colony$colony_lost), min(colony$colony_lost_pct), min(stressor$stress_pct, na.rm = TRUE)),
Max = c(max(colony$colony_lost), max(colony$colony_lost_pct), max(stressor$stress_pct, na.rm = TRUE)),
StdDev = c(sd(colony$colony_lost), sd(colony$colony_lost_pct), sd(stressor$stress_pct, na.rm = TRUE))
)
kable(stat_summary, caption = "Summary Statistics for Key Variables")
loss_trend <- colony_sample %>%
group_by(year) %>%
summarise(total_colony_lost = sum(colony_lost))
ggplot(loss_trend, aes(x = year, y = total_colony_lost)) +
geom_line(color = "blue", linewidth = 1) +
labs(caption = "
Figure 1: Trend of Bee Colony Losses Over the Years",
x = "Year",
y = "Total Colonies Lost")+
theme(plot.caption = element_text(hjust = 0.5))
stressor_summary <- stressor_sample %>%
group_by(stressor) %>%
summarise(avg_stress_pct = mean(stress_pct, na.rm = TRUE)) %>%
arrange(desc(avg_stress_pct))
ggplot(stressor_summary, aes(x = reorder(stressor, -avg_stress_pct), y = avg_stress_pct)) +
geom_bar(stat = "identity", fill = "orange") +
coord_flip() +
labs(caption = "
Figure 2: Average Stress Percentage by Stressor",
x = "Stressors",
y = "Average Stress Percentage")+
theme(plot.caption = element_text(hjust = 0.5))
state_losses <- colony %>%
group_by(state) %>%
summarise(total_lost = sum(colony_lost)) %>%
arrange(desc(total_lost))
top_states <- state_losses %>% slice_head(n = 5)
bottom_states <- state_losses %>% slice_tail(n = 5)
top_bottom_states <- bind_rows(
top_states %>% mutate(group = "Highest Losses"),
bottom_states %>% mutate(group = "Lowest Losses")
)
ggplot(top_bottom_states, aes(x = reorder(state, -total_lost), y = total_lost, fill = group)) +
geom_col(show.legend = FALSE) +
facet_wrap(~ group, scales = "free") +
labs(caption = "
Figure 3: Colony Losses: Top 5 and Bottom 5 States",
x = "State",
y = "Total Colonies Lost") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
theme(plot.caption = element_text(hjust = 0.5))
ggplot(merged_data, aes(x = stressor, y = colony_lost_pct)) +
geom_boxplot(fill = "lightgreen") +
coord_flip() +
labs(caption = "
Figure 4: Colony Loss Percentage by Stressor",
x = "Stressor",
y = "Colony Loss Percentage")+
theme(plot.caption = element_text(hjust = 0.5))
correlation <- cor(merged_data$colony_lost, merged_data$stress_pct, use = "complete.obs")
print(paste("Correlation between colony loss and stress percentage:", round(correlation, 2)))
ggplot(merged_data, aes(x = stress_pct, y = colony_lost)) +
geom_point(alpha = 0.6, color = "purple") +
geom_smooth(method = "lm", color = "red") +
labs(caption = "
Figure 5: Relationship Between Colony Loss and Stress Percentage",
x = "Stress Percentage",
y = "Colonies Lost")+
theme(plot.caption = element_text(hjust = 0.5))
library(broom)  # For tidy output
library(GGally)  # For ggpairs
library(knitr)   # For kable
# Fit the regression model
model <- lm(colony_lost ~ stress_pct + year + factor(state), data = merged_data)
# Extract residuals summary
residuals_summary <- summary(model)$residuals
residuals_table <- data.frame(
Residuals = c("Min", "1Q", "Median", "3Q", "Max"),
Values = c(min(residuals_summary),
quantile(residuals_summary, 0.25),
median(residuals_summary),
quantile(residuals_summary, 0.75),
max(residuals_summary))
)
# Extract model statistics
model_stats <- data.frame(
Statistic = c("Residual standard error", "Multiple R-squared", "Adjusted R-squared", "F-statistic", "p-value"),
Value = c(
summary(model)$sigma,
summary(model)$r.squared,
summary(model)$adj.r.squared,
summary(model)$fstatistic[1],
summary(model)$fstatistic[4]
)
)
kable(residuals_table, format = "markdown", caption = "Summary of Residuals")
kable(model_stats, format = "markdown", caption = "Summary of Model Statistics")
library(GGally)
ggpairs(merged_data, columns = c("colony_lost", "colony_added", "stress_pct")) +
labs(caption = "
Figure 6: Pairs Plot of Colony Loss, Colony Added, and Stress Percentage") +
theme(plot.caption = element_text(hjust = 0.5))
library(knitr)  # For kable
library(dplyr)  # For data manipulation
# Hypothesis testing: Proportion test for number of colonies lost between high stress and low stress groups.
high_stress <- merged_data %>% filter(stress_pct > median(stress_pct))
low_stress <- merged_data %>% filter(stress_pct <= median(stress_pct))
# Define threshold for high colony loss
loss_threshold <- median(merged_data$colony_lost, na.rm = TRUE)
# Calculate counts of high-loss colonies in each group
high_stress_high_loss <- nrow(high_stress %>% filter(colony_lost > loss_threshold))
low_stress_high_loss <- nrow(low_stress %>% filter(colony_lost > loss_threshold))
# Total number of colonies in each group
high_stress_total <- nrow(high_stress)
low_stress_total <- nrow(low_stress)
# Perform two-proportion z-test
prop_test_results <- prop.test(
x = c(high_stress_high_loss, low_stress_high_loss),  # Counts of high-loss colonies
n = c(high_stress_total, low_stress_total),         # Total colonies in each group
alternative = "two.sided"                          # Test for any difference
)
# Extract important results
results_table <- data.frame(
Statistic = c("X-squared", "Degrees of Freedom", "p-value", "Proportion 1", "Proportion 2"),
Value = c(
round(prop_test_results$statistic, 6),
prop_test_results$parameter,
round(prop_test_results$p.value, 4),
round(prop_test_results$estimate[1], 4),
round(prop_test_results$estimate[2], 4)
)
)
# Print the results table using kable
kable(results_table, format = "markdown", caption = "Results of the Proportion Test")
library(knitr)  # For kable
library(dplyr)  # For data manipulation
# Perform Shapiro-Wilk test for normality within each stress level
shapiro_results <- by(merged_data$colony_lost, merged_data$stressor, function(x) shapiro.test(x))
# Extract relevant information into a data frame
results_table <- data.frame(
Stressor = names(shapiro_results),
W = sapply(shapiro_results, function(x) round(x$statistic, 5)),
p_value = sapply(shapiro_results, function(x) round(x$p.value, 6))
)
# Print the results table using kable
kable(results_table, format = "markdown", caption = "Results of Shapiro-Wilk Normality Tests by Stressor")
library(knitr)  # For kable
# Run Kruskal-Wallis Test to compare colony loss across different stressors
kruskal_result <- kruskal.test(colony_lost ~ stressor, data = merged_data)
# Extract relevant information
kruskal_summary <- data.frame(
Statistic = "Kruskal-Wallis Chi-squared",
Value = round(kruskal_result$statistic, 4),
DF = kruskal_result$parameter,  # Changed to DF
p_value = round(kruskal_result$p.value, 4)
)
# Print the results table using kable
kable(kruskal_summary, format = "markdown", caption = "Results of the Kruskal-Wallis Test")
